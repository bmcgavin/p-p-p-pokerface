(use 'p-p-p-pokerface :reload-all)
(rank "5H")
(use 'p-p-p-pokerface :reload-all)
(rank "5H")
(use 'p-p-p-pokerface :reload-all)
(rank "5H")
(use 'p-p-p-pokerface :reload-all)
(rank "5H")
(use 'p-p-p-pokerface :reload-all)
(suit "5H")
(use 'p-p-p-pokerface :reload-all)
def ranks (sort (map rank flush-hand))
(use 'p-p-p-pokerface :reload-all)
(def ranks (sort (map rank hand)))
(def ranks (sort (map rank flush-hand)))
(ranks)
(first ranks)
(range (first ranks) (+ (first ranks) 5)
)
(def checkers #{[high-card? 0]  [pair? 1]
                 [two-pairs? 2]  [three-of-a-kind? 3]
                 [straight? 4]   [flush? 5]
                 [full-house? 6] [four-of-a-kind? 7]
                 [straight-flush? 8]})
(map checkers flush-hand)
(checkers flush-hand)
(apply max checkers flush-hand)
(apply checkers flush-hand)
(checkers)
(first checkers)
((first checkers) hand)
((first checkers) flush-hand)
((second checkers) flush-hand)
(second checkers)
(pair? flush-hand)
(apply (second checkers) flush-hand)
(apply (second (second checkers)) flush-hand)
((vals (second checkers)) flush-hand)
(vals (second checkers))
(apply (vals (second checkers)) flush-hand)
(vals checkers)
(second (second checkers))
(second (first checkers))
